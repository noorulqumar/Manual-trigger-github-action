name: Update STAGEVERSION

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  contents: read
  actions: write

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Update STAGEVERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python - <<EOF
          import subprocess
          import json
          
          # Fetch the current value of the STAGEVERSION variable
          gh_command = ["gh", "api", "repos/noorulqumar/Manual-trigger-github-action/actions/variables/STAGEVERSION", "--method", "GET"]
          result = subprocess.run(gh_command, capture_output=True, text=True)
          
          print(f"Raw API Response: {result.stdout}")
          
          try:
              # Attempt to parse the response as JSON and extract the 'value' field
              response = json.loads(result.stdout)
              stage_version = response.get("value")
              
              if not stage_version:
                  raise KeyError("The 'value' field is missing in the response")

              print(f"Current version: {stage_version}")
              
              # Remove the 'vstage-' prefix and split the version
              version = stage_version.lstrip('vstage-')
              version_parts = list(map(int, version.split('.')))
              
              # Increment the patch version
              patch_version = version_parts[2] + 1
              
              # Create the new version string
              new_version = f"vstage-{version_parts[0]}.{version_parts[1]}.{patch_version}"
              print(f"New version: {new_version}")
              
              # Update the STAGEVERSION variable with the new version
              update_command = [
                  "gh", "api", "-X", "PATCH",
                  "repos/noorulqumar/Manual-trigger-github-action/actions/variables/STAGEVERSION",
                  "-f", f"value={new_version}"
              ]
              subprocess.run(update_command)

          except (KeyError, json.JSONDecodeError) as e:
              print(f"Error: {e}")
              exit(1)
          EOF
